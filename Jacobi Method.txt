#include<bits/stdc++.h>
using namespace std;

class Jacobi
{

public:

    double error=0.0005;



    int cheack(double x1[],double x2[],int n)     ///for checking the difference less than error
    {
        for(int i=0;i<n;i++)
        {
            if(fabs(x1[i]-x2[i])>error)
            return 1;
        }

        return 0;

    }

    void findroot()         ///for finding the values
    {
        int n,i,j;
        cout<<"Enter the no. of equations....."<<endl;
        cin>>n;

        double arr[n][n+1];                                 ///declaration of array

        double x1[n]={0},x2[n]={0};                         /// arrays  are initialize as zero

        cout<<"Enter the co-efficient of variables as a matrix row wise.."<<endl;

        for(i=0;i<n;i++)                                    /// Take input
            for(j=0;j<=n;j++)
                cin>>arr[i][j];
    do
    {
        for(i=0;i<n;i++)
        {
            x2[i]=x1[i];
            cout<<x1[i]<<" ";
        }
        cout<<endl;

        for(i=0;i<n;i++)
        {
            double temp = 0;

            for(j=0;j<n;j++)
            {
                if(i!=j)                                     /// comment for 3 variables
                {
                    temp=temp+x2[j]*arr[i][j];              /// for x1[0], temp= x2[1]*arr[0][1]+ x2[2]*arr[0][2]  since i=j=0 will not count
                }                                           /// for x1[1], temp= x2[0]*arr[1][0]+ x2[2]*arr[1][2]  since i=j=1 will not count
            }                                               /// for x1[2], temp= x2[2]*arr[2][1]+ x2[1]*arr[2][1]  since i=j=2 will not count

                x1[i] = (arr[i][n]-temp)/arr[i][i];         ///    x1[0]= (arr[0][3]-temp)/arr[0][0]                since i=0
                                                            ///    x1[1]= (arr[1][3]-temp)/arr[0][0]                since i=1
                                                            ///    x1[2]= (arr[2][3]-temp)/arr[0][0]                since i=1

        }
    } while(cheack (x1,x2,n));

    cout<<endl<<endl;

    for(i=0;i<n;i++)
        cout<<x1[i]<<" ";
}
};

/// 2 1 1 5 3 5 2 15 2 1 4 8   solve this using this method

int main()
{
    Jacobi obj;
    obj.findroot();

    return 0;
}


